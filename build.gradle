plugins {
    id 'java'
    id "io.qameta.allure" version "2.11.0"
    id "org.sonarqube" version "3.5.0.2730"
}

apply plugin: 'io.qameta.allure'

allure {
    version = '2.11.0'
}

group 'report-portal-automation-tests'
version 'release-1.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    implementation 'org.testng:testng:7.1.0'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'

    implementation group: 'org.testng', name: 'testng', version: '7.1.0'

    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.5'
    implementation group: 'io.qameta.allure', name: 'allure-junit5', version: '2.13.5'
    implementation group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.13.5'
    implementation group: 'io.qameta.allure', name: 'allure-cucumber-jvm', version: '2.13.5'
    implementation group: 'io.qameta.allure', name: 'allure-commandline', version: '2.24.1', ext: 'pom'
    implementation group: 'com.github.automatedowl', name: 'allure-environment-writer', version: '1.0.0'
    implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.20'

    implementation group: 'io.rest-assured', name: 'rest-assured', version: '4.2.0'
    implementation group: 'io.rest-assured', name: 'json-schema-validator', version: '4.3.0'

    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.5.3'
    implementation group: 'io.testsmith', name: 'webdriver-event-listeners', version: '0.3'

    implementation group: 'org.awaitility', name: 'awaitility', version: '4.0.3'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14'

    implementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'

    implementation group: 'commons-configuration', name: 'commons-configuration', version: '1.10'

    implementation group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '2.+'

    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation group: 'com.opencsv', name: 'opencsv', version: '5.8'

    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.14.0'
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '7.14.0'

    implementation 'com.epam.reportportal:agent-java-testng:5.1.3'
    implementation 'com.epam.reportportal:client-java:5.1.16'
    implementation 'com.epam.reportportal:logger-java-logback:5.1.6'
    implementation 'com.epam.reportportal:agent-java-testng:5.3.1'
    implementation group: 'com.epam.reportportal', name: 'logger-java-rest-assured', version: '5.1.3'

    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'

}

test() {
    systemProperties(System.getProperties())
    useTestNG() {
        suites './src/test/resources/test/ReportPortalSuite.xml'
        if (System.getProperty('groups') != null) {
            includeGroups System.getProperty('groups')
        }
        options.useDefaultListeners true
        testLogging {
            events = ['PASSED', 'FAILED', 'SKIPPED']
        }
    }
}

task testUsingTestNG(type: Test) {
    systemProperties(System.getProperties())

    useTestNG() {
        suites './src/test/resources/testRunner/ReportPortalSuite.xml'
        options.useDefaultListeners true
        testLogging {
            events = ['PASSED', 'FAILED', 'SKIPPED']
        }
    }
}

task testUsingJunit(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform() {
        include '**/junit/test/*Test.class'
    }
    reports.junitXml.enabled = true
    reports.junitXml.destination = file("$buildDir/reports/tests/test/junitreports")
}


task testUsingCucumber(type: Test) {
    systemProperties(System.getProperties())

    useTestNG() {
        suites './src/test/resources/bdd/ReportPortalSuite.xml'
        testLogging {
            events = ['PASSED', 'FAILED', 'SKIPPED']
        }
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

sonar {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.projectKey', 'report-portal-tests'
        property 'sonar.projectName', 'report-portal-tests'
        property 'sonar.projectVersion', '1.0'
        property 'sonar.token', 'sqp_c9a47f371985a1b46420958e766859330222ab5a'
    }
}